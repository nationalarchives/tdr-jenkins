credentials:
  system:
    domainCredentials:
    - credentials:
      - aws:
          accessKey: "${/mgmt/access_key}"
          id: "aws"
          scope: GLOBAL
          secretKey: "${/mgmt/secret_key}"
      - usernamePassword:
          username: ${/mgmt/docker/username}
          password: ${/mgmt/docker/password}
          id: "docker"
          scope: GLOBAL
      - usernamePassword:
          username: ${/mgmt/github/username}
          password: ${/mgmt/github/password}
          id: "github"
          scope: GLOBAL
      - string:
          id: "slack"
          scope: GLOBAL
          secret: ${/mgmt/slack/token}
jenkins:
  securityRealm:
    github:
      clientID: "${/mgmt/github/client}"
      clientSecret: "${/mgmt/github/secret}"
      githubApiUri: "https://api.github.com"
      githubWebUri: "https://github.com"
      oauthScopes: "read:org,user:email,repo"

  agentProtocols:
  - "JNLP4-connect"
  - "Ping"
  authorizationStrategy:
    github:
      adminUserNames: "MancunianSam,Dclipsham,ian-hoyle,LauraDamianTNA,MarkKingsbury,plembke-tna,sarrahdi,suzannehamilton,TomJKing"
      allowAnonymousJobStatusPermission: false
      allowAnonymousReadPermission: false
      allowCcTrayPermission: true
      allowGithubWebHookPermission: true
      authenticatedUserCreateJobPermission: false
      authenticatedUserReadPermission: true
      organizationNames: "nationalarchives"
      useRepositoryPermissions: true
  clouds:
  - ecs:
      allowedOverrides: "all"
      cluster: "${JENKINS_CLUSTER}"
      jenkinsUrl: "${LOAD_BALANCER_URL}"
      credentialsId: "aws"
      name: "ecs"
      regionName: "eu-west-2"
      templates:
      - assignPublicIp: true
        cpu: 2048
        image: "nationalarchives/jenkins-build-sbt"
        label: "sbt"
        launchType: "FARGATE"
        memory: 0
        memoryReservation: 4096
        networkMode: "awsvpc"
        privileged: false
        remoteFSRoot: "/home/jenkins"
        securityGroups: "${/mgmt/fargate_security_group}"
        sharedMemorySize: 0
        subnets: "${FARGATE_SUBNET}"
        templateName: "sbt"
      - assignPublicIp: false
        cpu: 256
        environments:
        - name: "INTG_ACCOUNT"
          value: "${INTEGRATION_ACCOUNT}"
        - name: "STAGING_ACCOUNT"
          value: "${STAGING_ACCOUNT}"
        - name: "PROD_ACCOUNT"
          value: "${PROD_ACCOUNT}"
        - name: "MANAGEMENT_ACCOUNT"
          value: "${MANAGEMENT_ACCOUNT}"
        image: "nationalarchives/jenkins-build-terraform"
        label: "terraform"
        launchType: "FARGATE"
        memory: 0
        memoryReservation: 512
        networkMode: "awsvpc"
        privileged: false
        remoteFSRoot: "/home/jenkins"
        securityGroups: "${/mgmt/fargate_security_group}"
        sharedMemorySize: 0
        subnets: "${FARGATE_SUBNET}"
        templateName: "terraform"
      - assignPublicIp: false
        cpu: 256
        environments:
        - name: "INTG_ACCOUNT"
          value: "${INTEGRATION_ACCOUNT}"
        - name: "STAGING_ACCOUNT"
          value: "${STAGING_ACCOUNT}"
        - name: "PROD_ACCOUNT"
          value: "${PROD_ACCOUNT}"
        - name: "MANAGEMENT_ACCOUNT"
          value: "${MANAGEMENT_ACCOUNT}"
        image: "nationalarchives/jenkins-build-aws"
        label: "aws"
        launchType: "FARGATE"
        memory: 0
        memoryReservation: 512
        networkMode: "awsvpc"
        privileged: false
        remoteFSRoot: "/home/jenkins"
        securityGroups: "${/mgmt/fargate_security_group}"
        sharedMemorySize: 0
        subnets: "${FARGATE_SUBNET}"
        taskrole: "arn:aws:iam::${MANAGEMENT_ACCOUNT}:role/TDRJenkinsNodeRole"
        templateName: "aws"
      - assignPublicIp: false
        cpu: 2048
        environments:
        - name: "INTG_ACCOUNT"
          value: "${INTEGRATION_ACCOUNT}"
        - name: "STAGING_ACCOUNT"
          value: "${STAGING_ACCOUNT}"
        - name: "PROD_ACCOUNT"
          value: "${PROD_ACCOUNT}"
        - name: "MANAGEMENT_ACCOUNT"
          value: "${MANAGEMENT_ACCOUNT}"
        image: "nationalarchives/jenkins-build-npm"
        label: "npm"
        launchType: "FARGATE"
        memory: 0
        memoryReservation: 4096
        networkMode: "awsvpc"
        privileged: false
        remoteFSRoot: "/home/jenkins"
        securityGroups: "${/mgmt/fargate_security_group}"
        sharedMemorySize: 0
        subnets: "${FARGATE_SUBNET}"
        templateName: "npm"
      - assignPublicIp: false
        cpu: 2048
        environments:
        - name: "INTG_ACCOUNT"
          value: "${INTEGRATION_ACCOUNT}"
        - name: "STAGING_ACCOUNT"
          value: "${STAGING_ACCOUNT}"
        - name: "PROD_ACCOUNT"
          value: "${PROD_ACCOUNT}"
        - name: "MANAGEMENT_ACCOUNT"
          value: "${MANAGEMENT_ACCOUNT}"
        image: "nationalarchives/jenkins-build-maven"
        label: "maven"
        launchType: "FARGATE"
        memory: 0
        memoryReservation: 4096
        networkMode: "awsvpc"
        privileged: false
        remoteFSRoot: "/home/jenkins"
        securityGroups: "${/mgmt/fargate_security_group}"
        sharedMemorySize: 0
        subnets: "${FARGATE_SUBNET}"
        templateName: "maven"
  crumbIssuer:
    standard:
      excludeClientIPFromCrumb: false
  disableRememberMe: false
  markupFormatter: "plainText"
  mode: EXCLUSIVE
  myViewsTabBar: "standard"
  numExecutors: 2
  primaryView:
    all:
      name: "all"
  projectNamingStrategy: "standard"
  quietPeriod: 5
  remotingSecurity:
    enabled: true
  scmCheckoutRetryCount: 0
  slaveAgentPort: 50000
  updateCenter:
    sites:
    - id: "default"
      url: "https://updates.jenkins.io/update-center.json"
  views:
  - all:
      name: "all"
  viewsTabBar: "standard"

unclassified:
  buildStepOperation:
    enabled: false
  gitHubPluginConfig:
    hookUrl: "https://jenkins.tdr-prototype.co.uk"
  gitSCM:
    createAccountBasedOnEmail: false
  location:
    adminAddress: "address not configured yet <nobody@nowhere>"
    url: "https://jenkins.tdr-prototype.co.uk"
  mailer:
    adminAddress: "address not configured yet <nobody@nowhere>"
    charset: "UTF-8"
    useSsl: false
  pollSCM:
    pollingThreadCount: 10
  slackNotifier:
    botUser: false
    room: "tdr"
    sendAsText: false
    teamDomain: "tna-digital"
    tokenCredentialId: "slack"
  timestamperConfig:
    allPipelines: true
    elapsedTimeFormat: "'<b>'HH:mm:ss.S'</b> '"
    systemTimeFormat: "'<b>'HH:mm:ss'</b> '"
tool:
  git:
    installations:
    - home: "git"
      name: "Default"
